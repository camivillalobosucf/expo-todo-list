{"ast":null,"code":"var _jsxFileName = \"/workspaces/expo-todo-list/components/TodoScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { CheckBox } from '@rneui/themed';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport logo from '../assets/taskiologo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoScreen = () => {\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    description: 'Buy groceries',\n    completed: false\n  }, {\n    id: '2',\n    description: 'Go to the gym',\n    completed: false\n  }]);\n  const [newTask, setNewTask] = useState('');\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? Object.assign({}, task, {\n      completed: !task.completed\n    }) : task));\n  };\n  const addTask = () => {\n    if (newTask.trim() === '') return;\n    const newTaskObj = {\n      id: Math.random().toString(),\n      description: newTask,\n      completed: false\n    };\n    setTasks([...tasks, newTaskObj]);\n    setNewTask('');\n  };\n  return _jsxDEV(View, {\n    style: styles.wrapper,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Image, {\n        source: logo,\n        style: styles.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.inputContainer,\n        children: [_jsxDEV(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter new task\",\n          value: newTask,\n          onChangeText: setNewTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: addTask,\n          children: _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), _jsxDEV(FlatList, {\n        data: tasks,\n        keyExtractor: item => item.id,\n        renderItem: ({\n          item\n        }) => _jsxDEV(View, {\n          style: styles.taskContainer,\n          children: [_jsxDEV(CheckBox, {\n            checked: item.completed,\n            onPress: () => toggleTaskCompletion(item.id),\n            checkedIcon: _jsxDEV(FontAwesome, {\n              name: \"dot-circle-o\",\n              size: 20,\n              color: \"#E6A5F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 30\n            }, this),\n            uncheckedIcon: _jsxDEV(FontAwesome, {\n              name: \"circle-o\",\n              size: 20,\n              color: \"#E6A5F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: [styles.taskText, item.completed && styles.completedText],\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  wrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    padding: 20\n  },\n  container: {\n    backgroundColor: '#fff',\n    maxWidth: 600,\n    width: '100%'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    fontFamily: 'DMSans_Bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 2,\n    borderRadius: 20,\n    borderColor: '#ccc',\n    padding: 10,\n    marginRight: 10,\n    fontFamily: 'DMSans_Regular',\n    fontSize: 16,\n    outlineStyle: 'none'\n  },\n  taskContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 5\n  },\n  taskText: {\n    fontSize: 16,\n    fontFamily: 'DMSans_Regular'\n  },\n  completedText: {\n    textDecorationLine: 'line-through',\n    color: 'gray'\n  },\n  button: {\n    backgroundColor: '#E6A5F3',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: 'DMSans_Bold'\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    marginBottom: 10\n  }\n});\nexport default TodoScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","FlatList","StyleSheet","TouchableOpacity","CheckBox","FontAwesome","Image","logo","jsxDEV","_jsxDEV","TodoScreen","tasks","setTasks","id","description","completed","newTask","setNewTask","toggleTaskCompletion","map","task","Object","assign","addTask","trim","newTaskObj","Math","random","toString","style","styles","wrapper","children","container","source","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","input","placeholder","value","onChangeText","button","onPress","buttonText","data","keyExtractor","item","renderItem","taskContainer","checked","checkedIcon","name","size","color","uncheckedIcon","taskText","completedText","create","flex","justifyContent","alignItems","width","padding","backgroundColor","maxWidth","header","fontSize","fontWeight","fontFamily","marginBottom","textAlign","flexDirection","borderWidth","borderRadius","borderColor","marginRight","outlineStyle","paddingVertical","textDecorationLine","paddingHorizontal","height","resizeMode","alignSelf"],"sources":["/workspaces/expo-todo-list/components/TodoScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, FlatList, StyleSheet, TouchableOpacity } from 'react-native'; \nimport { CheckBox } from '@rneui/themed';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Image } from 'react-native';\nimport logo from '../assets/taskiologo.png';\n\n\nconst TodoScreen = () => {\n  /*defautl task list in a state variable here\n  and also has the id unique identifier, boolean and description*/\n  const [tasks, setTasks] = useState([\n    { id: '1', \n      description: 'Buy groceries', \n      completed: false },\n    { id: '2', \n      description: 'Go to the gym', \n      completed: false },\n  ]);\n  \n  const [newTask, setNewTask] = useState('');\n\n  //function to toggle completion\n  const toggleTaskCompletion = (id) => {\n    setTasks(tasks.map(task => \n      task.id === id ? { ...task, completed: !task.completed } : task\n    ));\n  };\n\n  //function to add new task\n  const addTask = () => {\n    if (newTask.trim() === '') return; // Ignore empty inputs\n\n    const newTaskObj = {\n      id: Math.random().toString(),\n      description: newTask,\n      completed: false,\n    };\n\n    setTasks([...tasks, newTaskObj]);\n    setNewTask('');\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      <View style={styles.container}>\n        <Image source={logo} style={styles.logo} />\n\n        {/*Input and Button*/}\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Enter new task\"\n            value={newTask}\n            onChangeText={setNewTask}\n          />\n          <TouchableOpacity style={styles.button} onPress={addTask}>\n            <Text style={styles.buttonText}>Add</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/*task List with flatlist and checkbox*/}\n        <FlatList\n          data={tasks}\n          keyExtractor={(item) => item.id}\n          renderItem={({ item }) => (\n            <View style={styles.taskContainer}>\n              <CheckBox\n                checked={item.completed}\n                onPress={() => toggleTaskCompletion(item.id)}\n                checkedIcon={<FontAwesome name=\"dot-circle-o\" size={20} color=\"#E6A5F3\" />}\n                uncheckedIcon={<FontAwesome name=\"circle-o\" size={20} color=\"#E6A5F3\" />}\n              />\n              <Text style={[styles.taskText, item.completed && styles.completedText]}>\n                {item.description}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    padding: 20,\n  },  \n\n  container: {\n    backgroundColor: '#fff',\n    maxWidth: 600, //limita el ancho para desktop\n    width: '100%',\n  },\n\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    fontFamily: 'DMSans_Bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  inputContainer: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n\n  input: {\n    flex: 1,\n    borderWidth: 2,\n    borderRadius: 20,\n    borderColor: '#ccc',\n    padding: 10,\n    marginRight: 10,\n    fontFamily: 'DMSans_Regular',\n    fontSize: 16,\n    outlineStyle: 'none',\n  },\n\n  taskContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 5,\n  },\n\n  taskText: {\n    fontSize: 16,\n    fontFamily: 'DMSans_Regular',\n  },\n\n  //required styling from professor\n  completedText: {\n    textDecorationLine: 'line-through',\n    color: 'gray',\n  },\n\n  button: {\n    backgroundColor: '#E6A5F3',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignItems: 'center',\n  },\n\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: 'DMSans_Bold',\n  },\n\n  logo: {\n    width: 150,   // Adjust size as needed\n    height: 150,  // Adjust size as needed\n    resizeMode: 'contain',\n    alignSelf: 'center',  // Centers the logo\n    marginBottom: 10,\n  },\n  \n});\n\nexport default TodoScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}