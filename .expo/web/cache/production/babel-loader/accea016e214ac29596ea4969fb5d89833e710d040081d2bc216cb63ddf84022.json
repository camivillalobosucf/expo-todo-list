{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{CheckBox}from'@rneui/themed';import{FontAwesome}from'@expo/vector-icons';import Image from\"react-native-web/dist/exports/Image\";import logo from'../assets/taskiologo.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TodoScreen=()=>{const[tasks,setTasks]=useState([{id:'1',description:'Buy groceries',completed:false},{id:'2',description:'Go to the gym',completed:false}]);const[newTask,setNewTask]=useState('');const toggleTaskCompletion=id=>{setTasks(tasks.map(task=>task.id===id?Object.assign({},task,{completed:!task.completed}):task));};const addTask=()=>{if(newTask.trim()==='')return;const newTaskObj={id:Math.random().toString(),description:newTask,completed:false};setTasks([...tasks,newTaskObj]);setNewTask('');};return _jsx(View,{style:styles.wrapper,children:_jsxs(View,{style:styles.container,children:[_jsx(Image,{source:logo,style:styles.logo}),_jsxs(View,{style:styles.inputContainer,children:[_jsx(TextInput,{style:styles.input,placeholder:\"Enter new task\",value:newTask,onChangeText:setNewTask}),_jsx(TouchableOpacity,{style:styles.button,onPress:addTask,children:_jsx(Text,{style:styles.buttonText,children:\"Add\"})})]}),_jsx(FlatList,{data:tasks,keyExtractor:item=>item.id,renderItem:({item})=>_jsxs(View,{style:styles.taskContainer,children:[_jsx(CheckBox,{checked:item.completed,onPress:()=>toggleTaskCompletion(item.id),checkedIcon:_jsx(FontAwesome,{name:\"dot-circle-o\",size:20,color:\"#E6A5F3\"}),uncheckedIcon:_jsx(FontAwesome,{name:\"circle-o\",size:20,color:\"#E6A5F3\"})}),_jsx(Text,{style:[styles.taskText,item.completed&&styles.completedText],children:item.description})]})})]})});};const styles=StyleSheet.create({wrapper:{flex:1,justifyContent:'center',alignItems:'center',width:'100%',padding:20},container:{backgroundColor:'#fff',maxWidth:600,width:'100%'},header:{fontSize:24,fontWeight:'bold',fontFamily:'DMSans_Bold',marginBottom:10,textAlign:'center'},inputContainer:{flexDirection:'row',marginBottom:10},input:{flex:1,borderWidth:2,borderRadius:20,borderColor:'#ccc',padding:10,marginRight:10,fontFamily:'DMSans_Regular',fontSize:16,outlineStyle:'none'},taskContainer:{flexDirection:'row',alignItems:'center',paddingVertical:5},taskText:{fontSize:16,fontFamily:'DMSans_Regular'},completedText:{textDecorationLine:'line-through',color:'gray'},button:{backgroundColor:'#E6A5F3',paddingVertical:10,paddingHorizontal:20,borderRadius:20,alignItems:'center'},buttonText:{color:'#fff',fontSize:16,fontWeight:'bold',fontFamily:'DMSans_Bold'},logo:{width:150,height:150,resizeMode:'contain',alignSelf:'center',marginBottom:10}});export default TodoScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","FlatList","StyleSheet","TouchableOpacity","CheckBox","FontAwesome","Image","logo","jsx","_jsx","jsxs","_jsxs","TodoScreen","tasks","setTasks","id","description","completed","newTask","setNewTask","toggleTaskCompletion","map","task","Object","assign","addTask","trim","newTaskObj","Math","random","toString","style","styles","wrapper","children","container","source","inputContainer","input","placeholder","value","onChangeText","button","onPress","buttonText","data","keyExtractor","item","renderItem","taskContainer","checked","checkedIcon","name","size","color","uncheckedIcon","taskText","completedText","create","flex","justifyContent","alignItems","width","padding","backgroundColor","maxWidth","header","fontSize","fontWeight","fontFamily","marginBottom","textAlign","flexDirection","borderWidth","borderRadius","borderColor","marginRight","outlineStyle","paddingVertical","textDecorationLine","paddingHorizontal","height","resizeMode","alignSelf"],"sources":["/workspaces/expo-todo-list/components/TodoScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, FlatList, StyleSheet, TouchableOpacity } from 'react-native'; \nimport { CheckBox } from '@rneui/themed';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Image } from 'react-native';\nimport logo from '../assets/taskiologo.png';\n\n\nconst TodoScreen = () => {\n  /*defautl task list in a state variable here\n  and also has the id unique identifier, boolean and description*/\n  const [tasks, setTasks] = useState([\n    { id: '1', \n      description: 'Buy groceries', \n      completed: false },\n    { id: '2', \n      description: 'Go to the gym', \n      completed: false },\n  ]);\n  \n  const [newTask, setNewTask] = useState('');\n\n  //function to toggle completion\n  const toggleTaskCompletion = (id) => {\n    setTasks(tasks.map(task => \n      task.id === id ? { ...task, completed: !task.completed } : task\n    ));\n  };\n\n  //function to add new task\n  const addTask = () => {\n    if (newTask.trim() === '') return; // Ignore empty inputs\n\n    const newTaskObj = {\n      id: Math.random().toString(),\n      description: newTask,\n      completed: false,\n    };\n\n    setTasks([...tasks, newTaskObj]);\n    setNewTask('');\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      <View style={styles.container}>\n        <Image source={logo} style={styles.logo} />\n\n        {/*Input and Button*/}\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Enter new task\"\n            value={newTask}\n            onChangeText={setNewTask}\n          />\n          <TouchableOpacity style={styles.button} onPress={addTask}>\n            <Text style={styles.buttonText}>Add</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/*task List with flatlist and checkbox*/}\n        <FlatList\n          data={tasks}\n          keyExtractor={(item) => item.id}\n          renderItem={({ item }) => (\n            <View style={styles.taskContainer}>\n              <CheckBox\n                checked={item.completed}\n                onPress={() => toggleTaskCompletion(item.id)}\n                checkedIcon={<FontAwesome name=\"dot-circle-o\" size={20} color=\"#E6A5F3\" />}\n                uncheckedIcon={<FontAwesome name=\"circle-o\" size={20} color=\"#E6A5F3\" />}\n              />\n              <Text style={[styles.taskText, item.completed && styles.completedText]}>\n                {item.description}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    padding: 20,\n  },  \n\n  container: {\n    backgroundColor: '#fff',\n    maxWidth: 600, //limita el ancho para desktop\n    width: '100%',\n  },\n\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    fontFamily: 'DMSans_Bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  inputContainer: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n\n  input: {\n    flex: 1,\n    borderWidth: 2,\n    borderRadius: 20,\n    borderColor: '#ccc',\n    padding: 10,\n    marginRight: 10,\n    fontFamily: 'DMSans_Regular',\n    fontSize: 16,\n    outlineStyle: 'none',\n  },\n\n  taskContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 5,\n  },\n\n  taskText: {\n    fontSize: 16,\n    fontFamily: 'DMSans_Regular',\n  },\n\n  //required styling from professor\n  completedText: {\n    textDecorationLine: 'line-through',\n    color: 'gray',\n  },\n\n  button: {\n    backgroundColor: '#E6A5F3',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignItems: 'center',\n  },\n\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: 'DMSans_Bold',\n  },\n\n  logo: {\n    width: 150,   // Adjust size as needed\n    height: 150,  // Adjust size as needed\n    resizeMode: 'contain',\n    alignSelf: 'center',  // Centers the logo\n    marginBottom: 10,\n  },\n  \n});\n\nexport default TodoScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}