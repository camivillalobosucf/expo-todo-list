{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import createMultiStyleIconSet from'./create-multi-style-icon-set';const FA5Style={regular:'regular',light:'light',solid:'solid',brand:'brand'};function createFA5iconSet(glyphMap,metadata={},pro=false){const metadataKeys=Object.keys(metadata);const fontFamily=`FontAwesome5${pro?'Pro':'Free'}`;function fallbackFamily(glyph){for(let i=0;i<metadataKeys.length;i+=1){const family=metadataKeys[i];if(metadata[family].indexOf(glyph)!==-1){return family==='brands'?'brand':family;}}return'regular';}function glyphValidator(glyph,style){const family=style==='brand'?'brands':style;if(metadataKeys.indexOf(family)===-1)return false;return metadata[family].indexOf(glyph)!==-1;}function createFontAwesomeStyle(style,fontWeight,family=fontFamily){let styleName=style;let fontFile=`FontAwesome5_${pro?`Pro_${styleName}`:styleName}.ttf`;if(styleName==='Brands'){styleName='Regular';fontFile='FontAwesome5_Brands.ttf';}return{fontFamily:`${family}-${styleName}`,fontFile,fontStyle:{},glyphMap};}const brandIcons=createFontAwesomeStyle('Brands','400','FontAwesome5Brands');const lightIcons=createFontAwesomeStyle('Light','300');const regularIcons=createFontAwesomeStyle('Regular','400');const solidIcons=createFontAwesomeStyle('Solid','900');const Icon=createMultiStyleIconSet({brand:brandIcons,light:lightIcons,regular:regularIcons,solid:solidIcons},{defaultStyle:'regular',fallbackFamily,glyphValidator});return Icon;}export{createFA5iconSet,FA5Style};","map":{"version":3,"names":["createMultiStyleIconSet","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","fontWeight","styleName","fontFile","fontStyle","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"sources":["/workspaces/expo-todo-list/node_modules/react-native-vector-icons/lib/create-icon-set-from-fontawesome5.js"],"sourcesContent":["import { Platform } from 'react-native';\nimport createMultiStyleIconSet from './create-multi-style-icon-set';\n\nconst FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nfunction createFA5iconSet(glyphMap, metadata = {}, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n    let fontFile = `FontAwesome5_${pro ? `Pro_${styleName}` : styleName}.ttf`;\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n      fontFile = 'FontAwesome5_Brands.ttf';\n    }\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle(\n    'Brands',\n    '400',\n    'FontAwesome5Brands'\n  );\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    }\n  );\n\n  return Icon;\n}\n\nexport { createFA5iconSet, FA5Style };\n"],"mappings":"6DACA,MAAO,CAAAA,uBAAuB,KAAM,+BAA+B,CAEnE,KAAM,CAAAC,QAAQ,CAAG,CACfC,OAAO,CAAE,SAAS,CAClBC,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,OACT,CAAC,CAED,QAAS,CAAAC,gBAAgBA,CAACC,QAAQ,CAAEC,QAAQ,CAAG,CAAC,CAAC,CAAEC,GAAG,CAAG,KAAK,CAAE,CAC9D,KAAM,CAAAC,YAAY,CAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAC1C,KAAM,CAAAK,UAAU,CAAG,eAAeJ,GAAG,CAAG,KAAK,CAAG,MAAM,EAAE,CAExD,QAAS,CAAAK,cAAcA,CAACC,KAAK,CAAE,CAC7B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,YAAY,CAACO,MAAM,CAAED,CAAC,EAAI,CAAC,CAAE,CAC/C,KAAM,CAAAE,MAAM,CAAGR,YAAY,CAACM,CAAC,CAAC,CAC9B,GAAIR,QAAQ,CAACU,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAK,CAAC,CAAC,CAAE,CAC1C,MAAO,CAAAG,MAAM,GAAK,QAAQ,CAAG,OAAO,CAAGA,MAAM,CAC/C,CACF,CAEA,MAAO,SAAS,CAClB,CAEA,QAAS,CAAAE,cAAcA,CAACL,KAAK,CAAEM,KAAK,CAAE,CACpC,KAAM,CAAAH,MAAM,CAAGG,KAAK,GAAK,OAAO,CAAG,QAAQ,CAAGA,KAAK,CACnD,GAAIX,YAAY,CAACS,OAAO,CAACD,MAAM,CAAC,GAAK,CAAC,CAAC,CAAE,MAAO,MAAK,CACrD,MAAO,CAAAV,QAAQ,CAACU,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAK,CAAC,CAAC,CAC/C,CAEA,QAAS,CAAAO,sBAAsBA,CAACD,KAAK,CAAEE,UAAU,CAAEL,MAAM,CAAGL,UAAU,CAAE,CACtE,GAAI,CAAAW,SAAS,CAAGH,KAAK,CACrB,GAAI,CAAAI,QAAQ,CAAG,gBAAgBhB,GAAG,CAAG,OAAOe,SAAS,EAAE,CAAGA,SAAS,MAAM,CAEzE,GAAIA,SAAS,GAAK,QAAQ,CAAE,CAC1BA,SAAS,CAAG,SAAS,CACrBC,QAAQ,CAAG,yBAAyB,CACtC,CAEA,MAAO,CACLZ,UAAU,CAAE,GAAGK,MAAM,IAAIM,SAAS,EAAE,CACpCC,QAAQ,CACRC,SAAS,CAIE,CAAC,CACV,CACFnB,QACF,CAAC,CACH,CAEA,KAAM,CAAAoB,UAAU,CAAGL,sBAAsB,CACvC,QAAQ,CACR,KAAK,CACL,oBACF,CAAC,CACD,KAAM,CAAAM,UAAU,CAAGN,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,KAAM,CAAAO,YAAY,CAAGP,sBAAsB,CAAC,SAAS,CAAE,KAAK,CAAC,CAC7D,KAAM,CAAAQ,UAAU,CAAGR,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,KAAM,CAAAS,IAAI,CAAG/B,uBAAuB,CAClC,CACEK,KAAK,CAAEsB,UAAU,CACjBxB,KAAK,CAAEyB,UAAU,CACjB1B,OAAO,CAAE2B,YAAY,CACrBzB,KAAK,CAAE0B,UACT,CAAC,CACD,CACEE,YAAY,CAAE,SAAS,CACvBlB,cAAc,CACdM,cACF,CACF,CAAC,CAED,MAAO,CAAAW,IAAI,CACb,CAEA,OAASzB,gBAAgB,CAAEL,QAAQ","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}