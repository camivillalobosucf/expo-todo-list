{"ast":null,"code":"import React,{Component}from\"react\";import times from\"lodash/times\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Animated from\"react-native-web/dist/exports/Animated\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const STAR_IMAGE=require(\"./images/star.png\");const HEART_IMAGE=require(\"./images/heart.png\");const ROCKET_IMAGE=require(\"./images/rocket.png\");const BELL_IMAGE=require(\"./images/bell.png\");const TYPES={star:{source:STAR_IMAGE,color:\"#f1c40f\",backgroundColor:\"white\"},heart:{source:HEART_IMAGE,color:\"#e74c3c\",backgroundColor:\"white\"},rocket:{source:ROCKET_IMAGE,color:\"#2ecc71\",backgroundColor:\"white\"},bell:{source:BELL_IMAGE,color:\"#f39c12\",backgroundColor:\"white\"},custom:{}};const fractionsType=(props,propName,componentName)=>{if(props[propName]){const value=props[propName];if(typeof value===\"number\"){return value>=0&&value<=20?null:new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);}return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);}};export default class SwipeRating extends Component{constructor(props){super(props);const{onStartRating,onSwipeRating,onFinishRating,fractions}=this.props;const position=new Animated.ValueXY();const panResponder=PanResponder.create({onStartShouldSetPanResponder:()=>true,onPanResponderGrant:(event,gesture)=>{const newPosition=new Animated.ValueXY();const tapPositionX=gesture.x0-this.state.centerX+gesture.dx;newPosition.setValue({x:tapPositionX,y:0});if(this.state.isComponentMounted){this.setState({position:newPosition,value:tapPositionX});const rating=this.getCurrentRating(tapPositionX);if(typeof onStartRating===\"function\"){onStartRating(rating);}}},onPanResponderMove:(event,gesture)=>{const newPosition=new Animated.ValueXY();const tapPositionX=gesture.x0-this.state.centerX+gesture.dx;newPosition.setValue({x:tapPositionX,y:0});if(this.state.isComponentMounted){this.setState({position:newPosition,value:tapPositionX});const rating=this.getCurrentRating(tapPositionX);if(typeof onSwipeRating===\"function\"){onSwipeRating(rating);}}},onPanResponderRelease:()=>{const rating=this.getCurrentRating(this.state.value);if(rating>=this.props.minValue){if(!fractions){this.setCurrentRating(rating);}if(typeof onFinishRating===\"function\"){onFinishRating(rating);}}}});this.state={panResponder,position,display:false,isComponentMounted:false};}componentDidMount(){try{this.setState({display:true,isComponentMounted:true},()=>this.setCurrentRating(this.props.startingValue));}catch(err){console.log(err);}}componentDidUpdate(prevProps){if(this.props.startingValue!==prevProps.startingValue){this.setCurrentRating(this.props.startingValue);}}handleLayoutChange(){this.ratingRef.measure((fx,fy,width,height,px)=>{const halfWidth=width/2;const pageXWithinWindow=px%Dimensions.get(\"window\").width;this.setState({centerX:pageXWithinWindow+halfWidth});});}getPrimaryViewStyle(){const{position}=this.state;const{imageSize,ratingCount,type}=this.props;const{color}=TYPES[type];const width=position.x.interpolate({inputRange:[-ratingCount*(imageSize/2),0,ratingCount*(imageSize/2)],outputRange:[0,ratingCount*imageSize/2,ratingCount*imageSize],extrapolate:\"clamp\"},{useNativeDriver:true});return{backgroundColor:color,width,height:width?imageSize:0};}getSecondaryViewStyle(){const{position}=this.state;const{imageSize,ratingCount,type}=this.props;const{backgroundColor}=TYPES[type];const width=position.x.interpolate({inputRange:[-ratingCount*(imageSize/2),0,ratingCount*(imageSize/2)],outputRange:[ratingCount*imageSize,ratingCount*imageSize/2,0],extrapolate:\"clamp\"},{useNativeDriver:true});return{backgroundColor,width,height:width?imageSize:0};}renderRatings(){const{imageSize,ratingCount,type,tintColor}=this.props;const{source}=TYPES[type];return times(ratingCount,index=>_jsx(View,{style:styles.starContainer,children:_jsx(Image,{source:source,style:{width:imageSize,height:imageSize,tintColor}})},index));}getCurrentRating(value){const{fractions,imageSize,ratingCount}=this.props;const startingValue=ratingCount/2;let currentRating=this.props.minValue?this.props.minValue:0;if(value>ratingCount*imageSize/2){currentRating=ratingCount;}else if(value<-ratingCount*imageSize/2){currentRating=this.props.minValue?this.props.minValue:0;}else if(value<=imageSize||value>imageSize){const diff=value/imageSize;currentRating=startingValue+diff;currentRating=fractions?Number(currentRating.toFixed(fractions)):Math.ceil(currentRating);}else{currentRating=fractions?Number(startingValue.toFixed(fractions)):Math.ceil(startingValue);}if(this.props.jumpValue>0&&this.props.jumpValue<this.props.ratingCount){return Math.ceil(currentRating*(1/this.props.jumpValue))/(1/this.props.jumpValue);}else{return currentRating;}}setCurrentRating(rating){const{imageSize,ratingCount}=this.props;const initialRating=ratingCount/2;let value=null;if(rating>ratingCount){value=ratingCount*imageSize/2;}else if(rating<0){value=-ratingCount*imageSize/2;}else if(rating<ratingCount/2||rating>ratingCount/2){value=(rating-initialRating)*imageSize;}else{value=0;}const newPosition=new Animated.ValueXY();newPosition.setValue({x:value,y:0});if(this.state.isComponentMounted){this.setState({position:newPosition,value});}}displayCurrentRating(){const{ratingCount,type,readonly,showReadOnlyText,ratingTextColor}=this.props;const color=ratingTextColor||TYPES[type].color;return _jsxs(View,{style:styles.showRatingView,children:[_jsxs(View,{style:styles.ratingView,children:[_jsx(Text,{style:[styles.ratingText,{color}],children:\"Rating: \"}),_jsx(Text,{style:[styles.currentRatingText,{color}],children:this.getCurrentRating(this.state.value)}),_jsxs(Text,{style:[styles.maxRatingText,{color}],children:[\"/\",ratingCount]})]}),_jsx(View,{children:readonly&&showReadOnlyText&&_jsx(Text,{style:[styles.readonlyLabel,{color}],children:\"(readonly)\"})})]});}render(){const{readonly,type,ratingImage,ratingColor,ratingBackgroundColor,style,showRating}=this.props;if(type===\"custom\"){const custom={source:ratingImage,color:ratingColor,backgroundColor:ratingBackgroundColor};TYPES.custom=custom;}return this.state.display?_jsxs(View,{pointerEvents:readonly?\"none\":\"auto\",style:style,children:[showRating&&this.displayCurrentRating(),_jsxs(View,Object.assign({style:styles.starsWrapper},this.state.panResponder.panHandlers,{children:[_jsxs(View,{style:styles.starsInsideWrapper,onLayout:()=>{this.handleLayoutChange();},ref:view=>{this.ratingRef=view;},children:[_jsx(Animated.View,{style:this.getPrimaryViewStyle()}),_jsx(Animated.View,{style:this.getSecondaryViewStyle()})]}),this.renderRatings()]}))]}):null;}componentWillUnmount(){this.setState({isComponentMounted:false});}}SwipeRating.defaultProps={type:\"star\",ratingImage:STAR_IMAGE,ratingColor:\"#f1c40f\",ratingBackgroundColor:\"white\",ratingCount:5,showReadOnlyText:true,imageSize:40,minValue:0,jumpValue:0};const styles=StyleSheet.create({starsWrapper:{flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\"},starsInsideWrapper:{position:\"absolute\",top:0,left:0,right:0,bottom:0,flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\"},showRatingView:{flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingBottom:5},ratingView:{flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",paddingBottom:5},ratingText:{fontSize:15,textAlign:\"center\",fontFamily:false?\"Trebuchet MS\":null,color:\"#34495e\"},readonlyLabel:{justifyContent:\"center\",alignItems:\"center\",fontSize:12,textAlign:\"center\",fontFamily:false?\"Trebuchet MS\":null,color:\"#34495a\"},currentRatingText:{fontSize:30,textAlign:\"center\",fontFamily:false?\"Trebuchet MS\":null},maxRatingText:{fontSize:18,textAlign:\"center\",fontFamily:false?\"Trebuchet MS\":null,color:\"#34495e\"}});","map":{"version":3,"names":["React","Component","times","View","Text","Animated","PanResponder","Image","StyleSheet","Platform","Dimensions","jsx","_jsx","jsxs","_jsxs","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","custom","fractionsType","props","propName","componentName","value","Error","SwipeRating","constructor","onStartRating","onSwipeRating","onFinishRating","fractions","position","ValueXY","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","componentDidMount","startingValue","err","console","log","componentDidUpdate","prevProps","handleLayoutChange","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","get","getPrimaryViewStyle","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","getSecondaryViewStyle","renderRatings","tintColor","index","style","styles","starContainer","children","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","initialRating","displayCurrentRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","ratingImage","ratingColor","ratingBackgroundColor","showRating","pointerEvents","Object","assign","starsWrapper","panHandlers","starsInsideWrapper","onLayout","ref","view","componentWillUnmount","defaultProps","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily"],"sources":["/workspaces/expo-todo-list/node_modules/react-native-ratings/dist/SwipeRating.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport { View, Text, Animated, PanResponder, Image, StyleSheet, Platform, Dimensions } from \"react-native\";\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require(\"./images/star.png\");\nconst HEART_IMAGE = require(\"./images/heart.png\");\nconst ROCKET_IMAGE = require(\"./images/rocket.png\");\nconst BELL_IMAGE = require(\"./images/bell.png\");\nconst TYPES = {\n    star: {\n        source: STAR_IMAGE,\n        color: \"#f1c40f\",\n        backgroundColor: \"white\"\n    },\n    heart: {\n        source: HEART_IMAGE,\n        color: \"#e74c3c\",\n        backgroundColor: \"white\"\n    },\n    rocket: {\n        source: ROCKET_IMAGE,\n        color: \"#2ecc71\",\n        backgroundColor: \"white\"\n    },\n    bell: {\n        source: BELL_IMAGE,\n        color: \"#f39c12\",\n        backgroundColor: \"white\"\n    },\n    custom: {}\n};\nconst fractionsType = (props, propName, componentName) => {\n    if (props[propName]) {\n        const value = props[propName];\n        if (typeof value === \"number\") {\n            return value >= 0 && value <= 20 ?\n                null :\n                new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n        }\n        return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n    }\n};\nexport default class SwipeRating extends Component {\n    constructor(props) {\n        super(props);\n        const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n        const position = new Animated.ValueXY();\n        const panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderGrant: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onStartRating === \"function\") {\n                        onStartRating(rating);\n                    }\n                }\n            },\n            onPanResponderMove: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onSwipeRating === \"function\") {\n                        onSwipeRating(rating);\n                    }\n                }\n            },\n            onPanResponderRelease: () => {\n                const rating = this.getCurrentRating(this.state.value);\n                if (rating >= this.props.minValue) {\n                    if (!fractions) {\n                        // 'round up' to the nearest rating image\n                        this.setCurrentRating(rating);\n                    }\n                    if (typeof onFinishRating === \"function\") {\n                        onFinishRating(rating);\n                    }\n                }\n            }\n        });\n        this.state = {\n            panResponder,\n            position,\n            display: false,\n            isComponentMounted: false\n        };\n    }\n    componentDidMount() {\n        try {\n            this.setState({ display: true, isComponentMounted: true }, () => this.setCurrentRating(this.props.startingValue));\n        }\n        catch (err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.startingValue !== prevProps.startingValue) {\n            this.setCurrentRating(this.props.startingValue);\n        }\n    }\n    handleLayoutChange() {\n        // eslint-disable-next-line max-params\n        this.ratingRef.measure((fx, fy, width, height, px) => {\n            const halfWidth = width / 2;\n            const pageXWithinWindow = px % Dimensions.get(\"window\").width;\n            this.setState({\n                centerX: pageXWithinWindow + halfWidth\n            });\n        });\n    }\n    getPrimaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { color } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                0,\n                ratingCount * imageSize / 2,\n                ratingCount * imageSize\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor: color,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    getSecondaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { backgroundColor } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                ratingCount * imageSize,\n                ratingCount * imageSize / 2,\n                0\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    renderRatings() {\n        const { imageSize, ratingCount, type, tintColor } = this.props;\n        const { source } = TYPES[type];\n        return times(ratingCount, index => <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }}/>\n      </View>);\n    }\n    // eslint-disable-next-line max-statements\n    getCurrentRating(value) {\n        const { fractions, imageSize, ratingCount } = this.props;\n        const startingValue = ratingCount / 2;\n        let currentRating = this.props.minValue ? this.props.minValue : 0;\n        if (value > ratingCount * imageSize / 2) {\n            currentRating = ratingCount;\n        }\n        else if (value < -ratingCount * imageSize / 2) {\n            currentRating = this.props.minValue ? this.props.minValue : 0;\n        }\n        else if (value <= imageSize || value > imageSize) {\n            const diff = value / imageSize;\n            currentRating = startingValue + diff;\n            currentRating = fractions ?\n                Number(currentRating.toFixed(fractions)) :\n                Math.ceil(currentRating);\n        }\n        else {\n            currentRating = fractions ?\n                Number(startingValue.toFixed(fractions)) :\n                Math.ceil(startingValue);\n        }\n        if (this.props.jumpValue > 0 &&\n            this.props.jumpValue < this.props.ratingCount) {\n            return (Math.ceil(currentRating * (1 / this.props.jumpValue)) /\n                (1 / this.props.jumpValue));\n        }\n        else {\n            return currentRating;\n        }\n    }\n    // eslint-disable-next-line max-statements\n    setCurrentRating(rating) {\n        const { imageSize, ratingCount } = this.props;\n        // `initialRating` corresponds to `startingValue` in the getter. Naming it\n        // Differently here avoids confusion with `value` below.\n        const initialRating = ratingCount / 2;\n        let value = null;\n        if (rating > ratingCount) {\n            value = ratingCount * imageSize / 2;\n        }\n        else if (rating < 0) {\n            value = -ratingCount * imageSize / 2;\n        }\n        else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n            value = (rating - initialRating) * imageSize;\n        }\n        else {\n            value = 0;\n        }\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: value, y: 0 });\n        if (this.state.isComponentMounted) {\n            this.setState({ position: newPosition, value });\n        }\n    }\n    displayCurrentRating() {\n        const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n        const color = ratingTextColor || TYPES[type].color;\n        return (<View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating: </Text>\n          <Text style={[styles.currentRatingText, { color }]}>\n            {this.getCurrentRating(this.state.value)}\n          </Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>\n          {readonly && showReadOnlyText &&\n                <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}\n        </View>\n      </View>);\n    }\n    render() {\n        const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n        if (type === \"custom\") {\n            const custom = {\n                source: ratingImage,\n                color: ratingColor,\n                backgroundColor: ratingBackgroundColor\n            };\n            TYPES.custom = custom;\n        }\n        return this.state.display ?\n            <View pointerEvents={readonly ? \"none\" : \"auto\"} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper} onLayout={() => {\n                    this.handleLayoutChange();\n                }} ref={view => {\n                    this.ratingRef = view;\n                }}>\n            <Animated.View style={this.getPrimaryViewStyle()}/>\n            <Animated.View style={this.getSecondaryViewStyle()}/>\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n            null;\n    }\n    componentWillUnmount() {\n        this.setState({ isComponentMounted: false });\n    }\n}\nSwipeRating.defaultProps = {\n    type: \"star\",\n    ratingImage: STAR_IMAGE,\n    ratingColor: \"#f1c40f\",\n    ratingBackgroundColor: \"white\",\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n};\nconst styles = StyleSheet.create({\n    starsWrapper: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    starsInsideWrapper: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    showRatingView: {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingView: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingText: {\n        fontSize: 15,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    },\n    readonlyLabel: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495a\"\n    },\n    currentRatingText: {\n        fontSize: 30,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n    },\n    maxRatingText: {\n        fontSize: 18,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    }\n});\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,KAAK,KAAM,cAAc,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,QAAA,qDAAAC,YAAA,yDAAAC,KAAA,kDAAAC,UAAA,uDAAAC,QAAA,qDAAAC,UAAA,uDAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGjC,KAAM,CAAAC,UAAU,CAAGC,OAAO,CAAC,mBAAmB,CAAC,CAC/C,KAAM,CAAAC,WAAW,CAAGD,OAAO,CAAC,oBAAoB,CAAC,CACjD,KAAM,CAAAE,YAAY,CAAGF,OAAO,CAAC,qBAAqB,CAAC,CACnD,KAAM,CAAAG,UAAU,CAAGH,OAAO,CAAC,mBAAmB,CAAC,CAC/C,KAAM,CAAAI,KAAK,CAAG,CACVC,IAAI,CAAE,CACFC,MAAM,CAAEP,UAAU,CAClBQ,KAAK,CAAE,SAAS,CAChBC,eAAe,CAAE,OACrB,CAAC,CACDC,KAAK,CAAE,CACHH,MAAM,CAAEL,WAAW,CACnBM,KAAK,CAAE,SAAS,CAChBC,eAAe,CAAE,OACrB,CAAC,CACDE,MAAM,CAAE,CACJJ,MAAM,CAAEJ,YAAY,CACpBK,KAAK,CAAE,SAAS,CAChBC,eAAe,CAAE,OACrB,CAAC,CACDG,IAAI,CAAE,CACFL,MAAM,CAAEH,UAAU,CAClBI,KAAK,CAAE,SAAS,CAChBC,eAAe,CAAE,OACrB,CAAC,CACDI,MAAM,CAAE,CAAC,CACb,CAAC,CACD,KAAM,CAAAC,aAAa,CAAGA,CAACC,KAAK,CAAEC,QAAQ,CAAEC,aAAa,GAAK,CACtD,GAAIF,KAAK,CAACC,QAAQ,CAAC,CAAE,CACjB,KAAM,CAAAE,KAAK,CAAGH,KAAK,CAACC,QAAQ,CAAC,CAC7B,GAAI,MAAO,CAAAE,KAAK,GAAK,QAAQ,CAAE,CAC3B,MAAO,CAAAA,KAAK,EAAI,CAAC,EAAIA,KAAK,EAAI,EAAE,CAC5B,IAAI,CACJ,GAAI,CAAAC,KAAK,CAAC,KAAKH,QAAQ,WAAWC,aAAa,6BAA6B,CAAC,CACrF,CACA,MAAO,IAAI,CAAAE,KAAK,CAAC,KAAKH,QAAQ,WAAWC,aAAa,qBAAqB,CAAC,CAChF,CACJ,CAAC,CACD,cAAe,MAAM,CAAAG,WAAW,QAAS,CAAAlC,SAAU,CAC/CmC,WAAWA,CAACN,KAAK,CAAE,CACf,KAAK,CAACA,KAAK,CAAC,CACZ,KAAM,CAAEO,aAAa,CAAEC,aAAa,CAAEC,cAAc,CAAEC,SAAU,CAAC,CAAG,IAAI,CAACV,KAAK,CAC9E,KAAM,CAAAW,QAAQ,CAAG,GAAI,CAAApC,QAAQ,CAACqC,OAAO,CAAC,CAAC,CACvC,KAAM,CAAAC,YAAY,CAAGrC,YAAY,CAACsC,MAAM,CAAC,CACrCC,4BAA4B,CAAEA,CAAA,GAAM,IAAI,CACxCC,mBAAmB,CAAEA,CAACC,KAAK,CAAEC,OAAO,GAAK,CACrC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAA5C,QAAQ,CAACqC,OAAO,CAAC,CAAC,CAC1C,KAAM,CAAAQ,YAAY,CAAGF,OAAO,CAACG,EAAE,CAAG,IAAI,CAACC,KAAK,CAACC,OAAO,CAAGL,OAAO,CAACM,EAAE,CACjEL,WAAW,CAACM,QAAQ,CAAC,CAAEC,CAAC,CAAEN,YAAY,CAAEO,CAAC,CAAE,CAAE,CAAC,CAAC,CAC/C,GAAI,IAAI,CAACL,KAAK,CAACM,kBAAkB,CAAE,CAC/B,IAAI,CAACC,QAAQ,CAAC,CAAElB,QAAQ,CAAEQ,WAAW,CAAEhB,KAAK,CAAEiB,YAAa,CAAC,CAAC,CAC7D,KAAM,CAAAU,MAAM,CAAG,IAAI,CAACC,gBAAgB,CAACX,YAAY,CAAC,CAClD,GAAI,MAAO,CAAAb,aAAa,GAAK,UAAU,CAAE,CACrCA,aAAa,CAACuB,MAAM,CAAC,CACzB,CACJ,CACJ,CAAC,CACDE,kBAAkB,CAAEA,CAACf,KAAK,CAAEC,OAAO,GAAK,CACpC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAA5C,QAAQ,CAACqC,OAAO,CAAC,CAAC,CAC1C,KAAM,CAAAQ,YAAY,CAAGF,OAAO,CAACG,EAAE,CAAG,IAAI,CAACC,KAAK,CAACC,OAAO,CAAGL,OAAO,CAACM,EAAE,CACjEL,WAAW,CAACM,QAAQ,CAAC,CAAEC,CAAC,CAAEN,YAAY,CAAEO,CAAC,CAAE,CAAE,CAAC,CAAC,CAC/C,GAAI,IAAI,CAACL,KAAK,CAACM,kBAAkB,CAAE,CAC/B,IAAI,CAACC,QAAQ,CAAC,CAAElB,QAAQ,CAAEQ,WAAW,CAAEhB,KAAK,CAAEiB,YAAa,CAAC,CAAC,CAC7D,KAAM,CAAAU,MAAM,CAAG,IAAI,CAACC,gBAAgB,CAACX,YAAY,CAAC,CAClD,GAAI,MAAO,CAAAZ,aAAa,GAAK,UAAU,CAAE,CACrCA,aAAa,CAACsB,MAAM,CAAC,CACzB,CACJ,CACJ,CAAC,CACDG,qBAAqB,CAAEA,CAAA,GAAM,CACzB,KAAM,CAAAH,MAAM,CAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACT,KAAK,CAACnB,KAAK,CAAC,CACtD,GAAI2B,MAAM,EAAI,IAAI,CAAC9B,KAAK,CAACkC,QAAQ,CAAE,CAC/B,GAAI,CAACxB,SAAS,CAAE,CAEZ,IAAI,CAACyB,gBAAgB,CAACL,MAAM,CAAC,CACjC,CACA,GAAI,MAAO,CAAArB,cAAc,GAAK,UAAU,CAAE,CACtCA,cAAc,CAACqB,MAAM,CAAC,CAC1B,CACJ,CACJ,CACJ,CAAC,CAAC,CACF,IAAI,CAACR,KAAK,CAAG,CACTT,YAAY,CACZF,QAAQ,CACRyB,OAAO,CAAE,KAAK,CACdR,kBAAkB,CAAE,KACxB,CAAC,CACL,CACAS,iBAAiBA,CAAA,CAAG,CAChB,GAAI,CACA,IAAI,CAACR,QAAQ,CAAC,CAAEO,OAAO,CAAE,IAAI,CAAER,kBAAkB,CAAE,IAAK,CAAC,CAAE,IAAM,IAAI,CAACO,gBAAgB,CAAC,IAAI,CAACnC,KAAK,CAACsC,aAAa,CAAC,CAAC,CACrH,CACA,MAAOC,GAAG,CAAE,CAERC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CACpB,CACJ,CACAG,kBAAkBA,CAACC,SAAS,CAAE,CAC1B,GAAI,IAAI,CAAC3C,KAAK,CAACsC,aAAa,GAAKK,SAAS,CAACL,aAAa,CAAE,CACtD,IAAI,CAACH,gBAAgB,CAAC,IAAI,CAACnC,KAAK,CAACsC,aAAa,CAAC,CACnD,CACJ,CACAM,kBAAkBA,CAAA,CAAG,CAEjB,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,CAACC,EAAE,CAAEC,EAAE,CAAEC,KAAK,CAAEC,MAAM,CAAEC,EAAE,GAAK,CAClD,KAAM,CAAAC,SAAS,CAAGH,KAAK,CAAG,CAAC,CAC3B,KAAM,CAAAI,iBAAiB,CAAGF,EAAE,CAAGvE,UAAU,CAAC0E,GAAG,CAAC,QAAQ,CAAC,CAACL,KAAK,CAC7D,IAAI,CAACpB,QAAQ,CAAC,CACVN,OAAO,CAAE8B,iBAAiB,CAAGD,SACjC,CAAC,CAAC,CACN,CAAC,CAAC,CACN,CACAG,mBAAmBA,CAAA,CAAG,CAClB,KAAM,CAAE5C,QAAS,CAAC,CAAG,IAAI,CAACW,KAAK,CAC/B,KAAM,CAAEkC,SAAS,CAAEC,WAAW,CAAEC,IAAK,CAAC,CAAG,IAAI,CAAC1D,KAAK,CACnD,KAAM,CAAEP,KAAM,CAAC,CAAGH,KAAK,CAACoE,IAAI,CAAC,CAC7B,KAAM,CAAAT,KAAK,CAAGtC,QAAQ,CAACe,CAAC,CAACiC,WAAW,CAAC,CACjCC,UAAU,CAAE,CACR,CAACH,WAAW,EAAID,SAAS,CAAG,CAAC,CAAC,CAC9B,CAAC,CACDC,WAAW,EAAID,SAAS,CAAG,CAAC,CAAC,CAChC,CACDK,WAAW,CAAE,CACT,CAAC,CACDJ,WAAW,CAAGD,SAAS,CAAG,CAAC,CAC3BC,WAAW,CAAGD,SAAS,CAC1B,CACDM,WAAW,CAAE,OACjB,CAAC,CAAE,CACCC,eAAe,CAAE,IACrB,CAAC,CAAC,CACF,MAAO,CACHrE,eAAe,CAAED,KAAK,CACtBwD,KAAK,CACLC,MAAM,CAAED,KAAK,CAAGO,SAAS,CAAG,CAChC,CAAC,CACL,CACAQ,qBAAqBA,CAAA,CAAG,CACpB,KAAM,CAAErD,QAAS,CAAC,CAAG,IAAI,CAACW,KAAK,CAC/B,KAAM,CAAEkC,SAAS,CAAEC,WAAW,CAAEC,IAAK,CAAC,CAAG,IAAI,CAAC1D,KAAK,CACnD,KAAM,CAAEN,eAAgB,CAAC,CAAGJ,KAAK,CAACoE,IAAI,CAAC,CACvC,KAAM,CAAAT,KAAK,CAAGtC,QAAQ,CAACe,CAAC,CAACiC,WAAW,CAAC,CACjCC,UAAU,CAAE,CACR,CAACH,WAAW,EAAID,SAAS,CAAG,CAAC,CAAC,CAC9B,CAAC,CACDC,WAAW,EAAID,SAAS,CAAG,CAAC,CAAC,CAChC,CACDK,WAAW,CAAE,CACTJ,WAAW,CAAGD,SAAS,CACvBC,WAAW,CAAGD,SAAS,CAAG,CAAC,CAC3B,CAAC,CACJ,CACDM,WAAW,CAAE,OACjB,CAAC,CAAE,CACCC,eAAe,CAAE,IACrB,CAAC,CAAC,CACF,MAAO,CACHrE,eAAe,CACfuD,KAAK,CACLC,MAAM,CAAED,KAAK,CAAGO,SAAS,CAAG,CAChC,CAAC,CACL,CACAS,aAAaA,CAAA,CAAG,CACZ,KAAM,CAAET,SAAS,CAAEC,WAAW,CAAEC,IAAI,CAAEQ,SAAU,CAAC,CAAG,IAAI,CAAClE,KAAK,CAC9D,KAAM,CAAER,MAAO,CAAC,CAAGF,KAAK,CAACoE,IAAI,CAAC,CAC9B,MAAO,CAAAtF,KAAK,CAACqF,WAAW,CAAEU,KAAK,EAAIrF,IAAA,CAACT,IAAI,EAAa+F,KAAK,CAAEC,MAAM,CAACC,aAAc,CAAAC,QAAA,CACjFzF,IAAA,CAACL,KAAK,EAACe,MAAM,CAAEA,MAAO,CAAC4E,KAAK,CAAE,CAAEnB,KAAK,CAAEO,SAAS,CAAEN,MAAM,CAAEM,SAAS,CAAEU,SAAU,CAAE,CAAC,CAAC,EADrCC,KAE1C,CAAC,CAAC,CACV,CAEApC,gBAAgBA,CAAC5B,KAAK,CAAE,CACpB,KAAM,CAAEO,SAAS,CAAE8C,SAAS,CAAEC,WAAY,CAAC,CAAG,IAAI,CAACzD,KAAK,CACxD,KAAM,CAAAsC,aAAa,CAAGmB,WAAW,CAAG,CAAC,CACrC,GAAI,CAAAe,aAAa,CAAG,IAAI,CAACxE,KAAK,CAACkC,QAAQ,CAAG,IAAI,CAAClC,KAAK,CAACkC,QAAQ,CAAG,CAAC,CACjE,GAAI/B,KAAK,CAAGsD,WAAW,CAAGD,SAAS,CAAG,CAAC,CAAE,CACrCgB,aAAa,CAAGf,WAAW,CAC/B,CAAC,IACI,IAAItD,KAAK,CAAG,CAACsD,WAAW,CAAGD,SAAS,CAAG,CAAC,CAAE,CAC3CgB,aAAa,CAAG,IAAI,CAACxE,KAAK,CAACkC,QAAQ,CAAG,IAAI,CAAClC,KAAK,CAACkC,QAAQ,CAAG,CAAC,CACjE,CAAC,IACI,IAAI/B,KAAK,EAAIqD,SAAS,EAAIrD,KAAK,CAAGqD,SAAS,CAAE,CAC9C,KAAM,CAAAiB,IAAI,CAAGtE,KAAK,CAAGqD,SAAS,CAC9BgB,aAAa,CAAGlC,aAAa,CAAGmC,IAAI,CACpCD,aAAa,CAAG9D,SAAS,CACrBgE,MAAM,CAACF,aAAa,CAACG,OAAO,CAACjE,SAAS,CAAC,CAAC,CACxCkE,IAAI,CAACC,IAAI,CAACL,aAAa,CAAC,CAChC,CAAC,IACI,CACDA,aAAa,CAAG9D,SAAS,CACrBgE,MAAM,CAACpC,aAAa,CAACqC,OAAO,CAACjE,SAAS,CAAC,CAAC,CACxCkE,IAAI,CAACC,IAAI,CAACvC,aAAa,CAAC,CAChC,CACA,GAAI,IAAI,CAACtC,KAAK,CAAC8E,SAAS,CAAG,CAAC,EACxB,IAAI,CAAC9E,KAAK,CAAC8E,SAAS,CAAG,IAAI,CAAC9E,KAAK,CAACyD,WAAW,CAAE,CAC/C,MAAQ,CAAAmB,IAAI,CAACC,IAAI,CAACL,aAAa,EAAI,CAAC,CAAG,IAAI,CAACxE,KAAK,CAAC8E,SAAS,CAAC,CAAC,EACxD,CAAC,CAAG,IAAI,CAAC9E,KAAK,CAAC8E,SAAS,CAAC,CAClC,CAAC,IACI,CACD,MAAO,CAAAN,aAAa,CACxB,CACJ,CAEArC,gBAAgBA,CAACL,MAAM,CAAE,CACrB,KAAM,CAAE0B,SAAS,CAAEC,WAAY,CAAC,CAAG,IAAI,CAACzD,KAAK,CAG7C,KAAM,CAAA+E,aAAa,CAAGtB,WAAW,CAAG,CAAC,CACrC,GAAI,CAAAtD,KAAK,CAAG,IAAI,CAChB,GAAI2B,MAAM,CAAG2B,WAAW,CAAE,CACtBtD,KAAK,CAAGsD,WAAW,CAAGD,SAAS,CAAG,CAAC,CACvC,CAAC,IACI,IAAI1B,MAAM,CAAG,CAAC,CAAE,CACjB3B,KAAK,CAAG,CAACsD,WAAW,CAAGD,SAAS,CAAG,CAAC,CACxC,CAAC,IACI,IAAI1B,MAAM,CAAG2B,WAAW,CAAG,CAAC,EAAI3B,MAAM,CAAG2B,WAAW,CAAG,CAAC,CAAE,CAC3DtD,KAAK,CAAG,CAAC2B,MAAM,CAAGiD,aAAa,EAAIvB,SAAS,CAChD,CAAC,IACI,CACDrD,KAAK,CAAG,CAAC,CACb,CACA,KAAM,CAAAgB,WAAW,CAAG,GAAI,CAAA5C,QAAQ,CAACqC,OAAO,CAAC,CAAC,CAC1CO,WAAW,CAACM,QAAQ,CAAC,CAAEC,CAAC,CAAEvB,KAAK,CAAEwB,CAAC,CAAE,CAAE,CAAC,CAAC,CACxC,GAAI,IAAI,CAACL,KAAK,CAACM,kBAAkB,CAAE,CAC/B,IAAI,CAACC,QAAQ,CAAC,CAAElB,QAAQ,CAAEQ,WAAW,CAAEhB,KAAM,CAAC,CAAC,CACnD,CACJ,CACA6E,oBAAoBA,CAAA,CAAG,CACnB,KAAM,CAAEvB,WAAW,CAAEC,IAAI,CAAEuB,QAAQ,CAAEC,gBAAgB,CAAEC,eAAgB,CAAC,CAAG,IAAI,CAACnF,KAAK,CACrF,KAAM,CAAAP,KAAK,CAAG0F,eAAe,EAAI7F,KAAK,CAACoE,IAAI,CAAC,CAACjE,KAAK,CAClD,MAAQ,CAAAT,KAAA,CAACX,IAAI,EAAC+F,KAAK,CAAEC,MAAM,CAACe,cAAe,CAAAb,QAAA,EAC3CvF,KAAA,CAACX,IAAI,EAAC+F,KAAK,CAAEC,MAAM,CAACgB,UAAW,CAAAd,QAAA,EAC7BzF,IAAA,CAACR,IAAI,EAAC8F,KAAK,CAAE,CAACC,MAAM,CAACiB,UAAU,CAAE,CAAE7F,KAAM,CAAC,CAAE,CAAA8E,QAAA,CAAC,UAAQ,CAAM,CAAC,CAC5DzF,IAAA,CAACR,IAAI,EAAC8F,KAAK,CAAE,CAACC,MAAM,CAACkB,iBAAiB,CAAE,CAAE9F,KAAM,CAAC,CAAE,CAAA8E,QAAA,CAChD,IAAI,CAACxC,gBAAgB,CAAC,IAAI,CAACT,KAAK,CAACnB,KAAK,CAAC,CACpC,CAAC,CACPnB,KAAA,CAACV,IAAI,EAAC8F,KAAK,CAAE,CAACC,MAAM,CAACmB,aAAa,CAAE,CAAE/F,KAAM,CAAC,CAAE,CAAA8E,QAAA,EAAC,GAAC,CAACd,WAAW,EAAO,CAAC,EACjE,CAAC,CACP3E,IAAA,CAACT,IAAI,EAAAkG,QAAA,CACFU,QAAQ,EAAIC,gBAAgB,EACvBpG,IAAA,CAACR,IAAI,EAAC8F,KAAK,CAAE,CAACC,MAAM,CAACoB,aAAa,CAAE,CAAEhG,KAAM,CAAC,CAAE,CAAA8E,QAAA,CAAC,YAAU,CAAM,CAAC,CACnE,CAAC,EACH,CAAC,CACT,CACAmB,MAAMA,CAAA,CAAG,CACL,KAAM,CAAET,QAAQ,CAAEvB,IAAI,CAAEiC,WAAW,CAAEC,WAAW,CAAEC,qBAAqB,CAAEzB,KAAK,CAAE0B,UAAW,CAAC,CAAG,IAAI,CAAC9F,KAAK,CACzG,GAAI0D,IAAI,GAAK,QAAQ,CAAE,CACnB,KAAM,CAAA5D,MAAM,CAAG,CACXN,MAAM,CAAEmG,WAAW,CACnBlG,KAAK,CAAEmG,WAAW,CAClBlG,eAAe,CAAEmG,qBACrB,CAAC,CACDvG,KAAK,CAACQ,MAAM,CAAGA,MAAM,CACzB,CACA,MAAO,KAAI,CAACwB,KAAK,CAACc,OAAO,CACrBpD,KAAA,CAACX,IAAI,EAAC0H,aAAa,CAAEd,QAAQ,CAAG,MAAM,CAAG,MAAO,CAACb,KAAK,CAAEA,KAAM,CAAAG,QAAA,EACjEuB,UAAU,EAAI,IAAI,CAACd,oBAAoB,CAAC,CAAC,CAC1ChG,KAAA,CAACX,IAAI,CAAA2H,MAAA,CAAAC,MAAA,EAAC7B,KAAK,CAAEC,MAAM,CAAC6B,YAAa,EAAK,IAAI,CAAC5E,KAAK,CAACT,YAAY,CAACsF,WAAW,EAAA5B,QAAA,EACvEvF,KAAA,CAACX,IAAI,EAAC+F,KAAK,CAAEC,MAAM,CAAC+B,kBAAmB,CAACC,QAAQ,CAAEA,CAAA,GAAM,CAC9C,IAAI,CAACzD,kBAAkB,CAAC,CAAC,CAC7B,CAAE,CAAC0D,GAAG,CAAEC,IAAI,EAAI,CACZ,IAAI,CAAC1D,SAAS,CAAG0D,IAAI,CACzB,CAAE,CAAAhC,QAAA,EACNzF,IAAA,CAACP,QAAQ,CAACF,IAAI,EAAC+F,KAAK,CAAE,IAAI,CAACb,mBAAmB,CAAC,CAAE,CAAC,CAAC,CACnDzE,IAAA,CAACP,QAAQ,CAACF,IAAI,EAAC+F,KAAK,CAAE,IAAI,CAACJ,qBAAqB,CAAC,CAAE,CAAC,CAAC,EACjD,CAAC,CACN,IAAI,CAACC,aAAa,CAAC,CAAC,GACjB,CAAC,EACH,CAAC,CACD,IAAI,CACZ,CACAuC,oBAAoBA,CAAA,CAAG,CACnB,IAAI,CAAC3E,QAAQ,CAAC,CAAED,kBAAkB,CAAE,KAAM,CAAC,CAAC,CAChD,CACJ,CACAvB,WAAW,CAACoG,YAAY,CAAG,CACvB/C,IAAI,CAAE,MAAM,CACZiC,WAAW,CAAE1G,UAAU,CACvB2G,WAAW,CAAE,SAAS,CACtBC,qBAAqB,CAAE,OAAO,CAC9BpC,WAAW,CAAE,CAAC,CACdyB,gBAAgB,CAAE,IAAI,CACtB1B,SAAS,CAAE,EAAE,CACbtB,QAAQ,CAAE,CAAC,CACX4C,SAAS,CAAE,CACf,CAAC,CACD,KAAM,CAAAT,MAAM,CAAG3F,UAAU,CAACoC,MAAM,CAAC,CAC7BoF,YAAY,CAAE,CACVQ,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAChB,CAAC,CACDR,kBAAkB,CAAE,CAChBzF,QAAQ,CAAE,UAAU,CACpBkG,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTN,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAChB,CAAC,CACDxB,cAAc,CAAE,CACZsB,aAAa,CAAE,QAAQ,CACvBC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBK,aAAa,CAAE,CACnB,CAAC,CACD5B,UAAU,CAAE,CACRqB,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBK,aAAa,CAAE,CACnB,CAAC,CACD3B,UAAU,CAAE,CACR4B,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,QAAQ,CACnBC,UAAU,CAAE,MAAwB,cAAc,CAAG,IAAI,CACzD3H,KAAK,CAAE,SACX,CAAC,CACDgG,aAAa,CAAE,CACXkB,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBM,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,QAAQ,CACnBC,UAAU,CAAE,MAAwB,cAAc,CAAG,IAAI,CACzD3H,KAAK,CAAE,SACX,CAAC,CACD8F,iBAAiB,CAAE,CACf2B,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,QAAQ,CACnBC,UAAU,CAAE,MAAwB,cAAc,CAAG,IACzD,CAAC,CACD5B,aAAa,CAAE,CACX0B,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,QAAQ,CACnBC,UAAU,CAAE,MAAwB,cAAc,CAAG,IAAI,CACzD3H,KAAK,CAAE,SACX,CACJ,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}